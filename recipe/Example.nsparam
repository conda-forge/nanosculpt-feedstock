#***************************************************************************************************************************
# nanoSCULPT: A tool to generate complex and realistic configurations for atomistic simulations
# Copyright (C) 2011-2015
# @authors: A. Prakash, M. Hummel, S. Schmauder and E. Bitzek, 
#
#
# *
# * This program is free software: you can redistribute it and/or modify
# * it under the terms of the GNU General Public License as published by
# * the Free Software Foundation, either version 3 of the License, or
# * (at your option) any later version.
# * 
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# * GNU General Public License for more details.
# * 
# * You should have received a copy of the GNU General Public License
# * along with this program.  If not, see <http://www.gnu.org/licenses/>
# * 
# *
#----------------------------------
# Sample NanoSculpt parameter file using the teddy bear surface mesh
# Comments before each set of parameters explain their role and usage
#----------------------------------
#***************************************************************************************************************************

# Crystal structure
structure  fcc	

# Epsilon added to prevent rounding errors epsilon
epsilon 	 0.0001

# Input and Output file names
eingabe 	 teddy_scaled.obj
outfile 	 Teddy.pos

# Starting value for atom numbering 
startnr         1	

# element / structure information
atomtype 	0	 # atom type. Important for composite structures
mass 	 26.981538
lattice_const 	4.05


#shift vector for diamond shift lattice - NOT FOR SHIFTING THE CENTER!!
shiftvec        0 0 0		# vector to shift the atoms

#shift center from where atoms are to be filled
#center_shift    1.0  1.0  1.0

#fix center to the given point here
custom_center   1
center_fix      0.0     0.0     0.0

#custom limits --> limits for the trapezoidal box
custom_loop_limits   1
llimits        -156 -156 -156
rlimits         156  156  156

#Debug Flag
idebug      1

#custom box limits --> if the geometric limits of the point data is not to be used
custom_box      1
box_minimal     0.0     0.0     0.0
box_maximal     500.0   500.0   500.0


# Write header info in the outfile?
header          1
box_x           500.0   0.0     0.0
box_y           0.0     500.0   0.0
box_z           0.0     0.0     500.0

#coordinate axis / unit vectors of the rotated axis
#rotation tensor to be put here
#vector1		1 0 0
#vector2		0 1 0
#vector3		0 0 1
vector1 	   0.1772939733871711   -0.3319457098373720   -0.9264873947988458
vector2 	  -0.4689601337938833    0.7991563236471940   -0.3760659028504502
vector3 	   0.8652417234002370    0.5011598707950033   -0.0139837045207445
